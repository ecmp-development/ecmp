name: ECMP API Pipeline

on:
  push:
    branches:
      - main
      - feature/**
      - testing/**
    paths:
      - ecmp-dev/**
      - ecmp-frontend/**
      - 'docker-compose.yml'
  workflow_dispatch:
  workflow_call:
    secrets:
      POSTGRES_DB_PASS:
        description: 'Password of Database'
        required: true
      JWT_KEY:
        description: 'Secret JWT key to sign Tokens'
        required: true

jobs:
  compile:
    runs-on: ubuntu-latest
    name: compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile Project
        run: |
          cd ecmp-dev
          ./mvnw clean compile

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update variables
        with:
          DB_USER: ${{ vars.POSTGRES_DB_USER }}
          DB_PASS: ${{ secrets.POSTGRES_DB_PASS }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
        run: |
          sed -i 's/<postgres_user>/$DB_USER/' ecmp-dev/src/main/resources/application.yml
          sed -i 's/<postgres_password>/$DB_PASS/' ecmp-dev/src/main/resources/application.yml
          sed -i 's/<jwt_key_signature>/$JWT_KEY/' ecmp-dev/src/main/resources/application.yml

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Running unit tests
        run: |
          cd ecmp-dev
          ./mvnw clean test

  build:
    runs-on: ubuntu-latest
    name: build project
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build project
        run: |
          cd ecmp-dev
          ./mvnw clean package

  build-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build project
        run: |
          cd ecmp-dev
          ./mvnw clean package

      - name: Extract project version
        id: extract_version
        run: |
          cd ecmp-dev
          echo "VERSION=$(./mvnw -q -Dexec.executeable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to Dockerhub
        uses: docker/build-push-action@v5
        with:
          context: ecmp-dev
          file: ecmp-dev/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ecmp-dev:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/ecmp-dev:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
